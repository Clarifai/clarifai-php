<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/clarifai/api/model_version.proto

namespace Clarifai\Internal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>clarifai.api.BinaryMetrics</code>
 */
class _BinaryMetrics extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 num_pos = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $num_pos = 0;
    /**
     * Generated from protobuf field <code>uint32 num_neg = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $num_neg = 0;
    /**
     * Generated from protobuf field <code>uint32 num_tot = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $num_tot = 0;
    /**
     * Generated from protobuf field <code>float roc_auc = 4 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $roc_auc = 0.0;
    /**
     * Generated from protobuf field <code>float f1 = 5 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     */
    private $f1 = 0.0;
    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 6;</code>
     */
    private $concept = null;
    /**
     * Generated from protobuf field <code>.clarifai.api.ROC roc_curve = 7;</code>
     */
    private $roc_curve = null;
    /**
     * Generated from protobuf field <code>.clarifai.api.PrecisionRecallCurve precision_recall_curve = 8;</code>
     */
    private $precision_recall_curve = null;

    public function __construct() {
        \GPBMetadata\Proto\Clarifai\Api\ModelVersion::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>uint32 num_pos = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int
     */
    public function getNumPos()
    {
        return $this->num_pos;
    }

    /**
     * Generated from protobuf field <code>uint32 num_pos = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int $var
     * @return $this
     */
    public function setNumPos($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_pos = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 num_neg = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int
     */
    public function getNumNeg()
    {
        return $this->num_neg;
    }

    /**
     * Generated from protobuf field <code>uint32 num_neg = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int $var
     * @return $this
     */
    public function setNumNeg($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_neg = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 num_tot = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return int
     */
    public function getNumTot()
    {
        return $this->num_tot;
    }

    /**
     * Generated from protobuf field <code>uint32 num_tot = 3 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param int $var
     * @return $this
     */
    public function setNumTot($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_tot = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float roc_auc = 4 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return float
     */
    public function getRocAuc()
    {
        return $this->roc_auc;
    }

    /**
     * Generated from protobuf field <code>float roc_auc = 4 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param float $var
     * @return $this
     */
    public function setRocAuc($var)
    {
        GPBUtil::checkFloat($var);
        $this->roc_auc = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float f1 = 5 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @return float
     */
    public function getF1()
    {
        return $this->f1;
    }

    /**
     * Generated from protobuf field <code>float f1 = 5 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
     * @param float $var
     * @return $this
     */
    public function setF1($var)
    {
        GPBUtil::checkFloat($var);
        $this->f1 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 6;</code>
     * @return \Clarifai\Internal\_Concept
     */
    public function getConcept()
    {
        return $this->concept;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.Concept concept = 6;</code>
     * @param \Clarifai\Internal\_Concept $var
     * @return $this
     */
    public function setConcept($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Internal\_Concept::class);
        $this->concept = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ROC roc_curve = 7;</code>
     * @return \Clarifai\Internal\_ROC
     */
    public function getRocCurve()
    {
        return $this->roc_curve;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.ROC roc_curve = 7;</code>
     * @param \Clarifai\Internal\_ROC $var
     * @return $this
     */
    public function setRocCurve($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Internal\_ROC::class);
        $this->roc_curve = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.PrecisionRecallCurve precision_recall_curve = 8;</code>
     * @return \Clarifai\Internal\_PrecisionRecallCurve
     */
    public function getPrecisionRecallCurve()
    {
        return $this->precision_recall_curve;
    }

    /**
     * Generated from protobuf field <code>.clarifai.api.PrecisionRecallCurve precision_recall_curve = 8;</code>
     * @param \Clarifai\Internal\_PrecisionRecallCurve $var
     * @return $this
     */
    public function setPrecisionRecallCurve($var)
    {
        GPBUtil::checkMessage($var, \Clarifai\Internal\_PrecisionRecallCurve::class);
        $this->precision_recall_curve = $var;

        return $this;
    }

}

